This file contains any messages produced by compilers while
running configure, to aid debugging if configure makes a mistake.

It was created by qDecoder configure 12 RELEASE, which was
generated by GNU Autoconf 2.68.  Invocation command line was

  $ ./configure --host=arm

## --------- ##
## Platform. ##
## --------- ##

hostname = ubuntu
uname -m = i686
uname -r = 3.13.0-32-generic
uname -s = Linux
uname -v = #57~precise1-Ubuntu SMP Tue Jul 15 03:50:54 UTC 2014

/usr/bin/uname -p = unknown
/bin/uname -X     = unknown

/bin/arch              = unknown
/usr/bin/arch -k       = unknown
/usr/convex/getsysinfo = unknown
/usr/bin/hostinfo      = unknown
/bin/machine           = unknown
/usr/bin/oslevel       = unknown
/bin/universe          = unknown

PATH: /usr/local/sbin
PATH: /usr/local/bin
PATH: /usr/sbin
PATH: /usr/bin
PATH: /sbin
PATH: /bin
PATH: /usr/games
PATH: /opt/CORTINA/toolchain/toolchain-arm_gcc-4.5.1+l_glibc-2.6.1_eabi/bin/
PATH: /mnt/work/STM/STLinux-2.4/devkit/armv5/bin


## ----------- ##
## Core tests. ##
## ----------- ##

configure:2070: checking for arm-gcc
configure:2097: result: arm-openwrt-linux-gnueabi-gcc
configure:2366: checking for C compiler version
configure:2375: arm-openwrt-linux-gnueabi-gcc --version >&5
arm-openwrt-linux-gnueabi-gcc (GCC) 4.5.2 20101126 (Linaro) [release 4.5-2010.12-0]
Copyright (C) 2010 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

configure:2386: $? = 0
configure:2375: arm-openwrt-linux-gnueabi-gcc -v >&5
Using built-in specs.
COLLECT_GCC=arm-openwrt-linux-gnueabi-gcc
COLLECT_LTO_WRAPPER=/opt/CORTINA/toolchain/toolchain-arm_gcc-4.5.1+l_glibc-2.6.1_eabi/bin/../libexec/gcc/arm-openwrt-linux-gnueabi/4.5.2/lto-wrapper
Target: arm-openwrt-linux-gnueabi
Configured with: /home/xtra/Work/openwrt-3.4.11/build_dir/toolchain-arm_gcc-4.5.1+l_glibc-2.6.1_eabi/gcc-linaro-4.5-2010.12-0/configure --prefix=/home/xtra/Work/openwrt-3.4.11/staging_dir/toolchain-arm_gcc-4.5.1+l_glibc-2.6.1_eabi --build=i686-linux-gnu --host=i686-linux-gnu --target=arm-openwrt-linux-gnueabi --with-gnu-ld --enable-target-optspace --disable-libgomp --disable-libmudflap --disable-multilib --disable-nls --with-gmp=/home/xtra/Work/openwrt-3.4.11/staging_dir/host --with-mpfr=/home/xtra/Work/openwrt-3.4.11/staging_dir/host --disable-decimal-float --with-gmp=/home/xtra/Work/openwrt-3.4.11/staging_dir/host --with-mpc=/home/xtra/Work/openwrt-3.4.11/staging_dir/host --with-mpfr=/home/xtra/Work/openwrt-3.4.11/staging_dir/host --disable-decimal-float --disable-libssp --enable-__cxa_atexit --enable-languages=c,c++ --enable-shared --enable-threads --with-slibdir=/home/xtra/Work/openwrt-3.4.11/staging_dir/toolchain-arm_gcc-4.5.1+l_glibc-2.6.1_eabi/lib --enable-lto --with-libelf=/home/xtra/Work/openwrt-3.4.11/staging_dir/host --disable-tls
Thread model: posix
gcc version 4.5.2 20101126 (Linaro) [release 4.5-2010.12-0] (GCC) 
configure:2386: $? = 0
configure:2375: arm-openwrt-linux-gnueabi-gcc -V >&5
arm-openwrt-linux-gnueabi-gcc: '-V' option must have argument
configure:2386: $? = 1
configure:2375: arm-openwrt-linux-gnueabi-gcc -qversion >&5
arm-openwrt-linux-gnueabi-gcc: unrecognized option '-qversion'
arm-openwrt-linux-gnueabi-gcc: no input files
configure:2386: $? = 1
configure:2406: checking whether the C compiler works
configure:2428: arm-openwrt-linux-gnueabi-gcc   -I/usr/include -I/usr/local/include -I./ -D_GNU_SOURCE  -L/usr/lib -L/usr/local/lib conftest.c  >&5
configure:2432: $? = 0
configure:2480: result: yes
configure:2483: checking for C compiler default output file name
configure:2485: result: a.out
configure:2491: checking for suffix of executables
configure:2498: arm-openwrt-linux-gnueabi-gcc -o conftest   -I/usr/include -I/usr/local/include -I./ -D_GNU_SOURCE  -L/usr/lib -L/usr/local/lib conftest.c  >&5
configure:2502: $? = 0
configure:2524: result: 
configure:2546: checking whether we are cross compiling
configure:2554: arm-openwrt-linux-gnueabi-gcc -o conftest   -I/usr/include -I/usr/local/include -I./ -D_GNU_SOURCE  -L/usr/lib -L/usr/local/lib conftest.c  >&5
In file included from /usr/include/stdio.h:28:0,
                 from conftest.c:9:
/usr/include/features.h:324:26: fatal error: bits/predefs.h: No such file or directory
compilation terminated.
configure:2558: $? = 1
configure:2565: ./conftest
./configure: line 2567: ./conftest: No such file or directory
configure:2569: $? = 127
configure:2584: result: yes
configure:2589: checking for suffix of object files
configure:2611: arm-openwrt-linux-gnueabi-gcc -c   -I/usr/include -I/usr/local/include -I./ -D_GNU_SOURCE conftest.c >&5
configure:2615: $? = 0
configure:2636: result: o
configure:2640: checking whether we are using the GNU C compiler
configure:2659: arm-openwrt-linux-gnueabi-gcc -c   -I/usr/include -I/usr/local/include -I./ -D_GNU_SOURCE conftest.c >&5
configure:2659: $? = 0
configure:2668: result: yes
configure:2677: checking whether arm-openwrt-linux-gnueabi-gcc accepts -g
configure:2697: arm-openwrt-linux-gnueabi-gcc -c -g  -I/usr/include -I/usr/local/include -I./ -D_GNU_SOURCE conftest.c >&5
configure:2697: $? = 0
configure:2738: result: yes
configure:2755: checking for arm-openwrt-linux-gnueabi-gcc option to accept ISO C89
configure:2819: arm-openwrt-linux-gnueabi-gcc  -c -g -O2  -I/usr/include -I/usr/local/include -I./ -D_GNU_SOURCE conftest.c >&5
In file included from /usr/include/stdio.h:28:0,
                 from conftest.c:10:
/usr/include/features.h:324:26: fatal error: bits/predefs.h: No such file or directory
compilation terminated.
configure:2819: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "qDecoder"
| #define PACKAGE_TARNAME "qdecoder"
| #define PACKAGE_VERSION "12 RELEASE"
| #define PACKAGE_STRING "qDecoder 12 RELEASE"
| #define PACKAGE_BUGREPORT "http://www.qdecoder.org/"
| #define PACKAGE_URL ""
| /* end confdefs.h.  */
| #include <stdarg.h>
| #include <stdio.h>
| #include <sys/types.h>
| #include <sys/stat.h>
| /* Most of the following tests are stolen from RCS 5.7's src/conf.sh.  */
| struct buf { int x; };
| FILE * (*rcsopen) (struct buf *, struct stat *, int);
| static char *e (p, i)
|      char **p;
|      int i;
| {
|   return p[i];
| }
| static char *f (char * (*g) (char **, int), char **p, ...)
| {
|   char *s;
|   va_list v;
|   va_start (v,p);
|   s = g (p, va_arg (v,int));
|   va_end (v);
|   return s;
| }
| 
| /* OSF 4.0 Compaq cc is some sort of almost-ANSI by default.  It has
|    function prototypes and stuff, but not '\xHH' hex character constants.
|    These don't provoke an error unfortunately, instead are silently treated
|    as 'x'.  The following induces an error, until -std is added to get
|    proper ANSI mode.  Curiously '\x00'!='x' always comes out true, for an
|    array size at least.  It's necessary to write '\x00'==0 to get something
|    that's true only with -std.  */
| int osf4_cc_array ['\x00' == 0 ? 1 : -1];
| 
| /* IBM C 6 for AIX is almost-ANSI by default, but it replaces macro parameters
|    inside strings and character constants.  */
| #define FOO(x) 'x'
| int xlc6_cc_array[FOO(a) == 'x' ? 1 : -1];
| 
| int test (int i, double x);
| struct s1 {int (*f) (int a);};
| struct s2 {int (*f) (double a);};
| int pairnames (int, char **, FILE *(*)(struct buf *, struct stat *, int), int, int);
| int argc;
| char **argv;
| int
| main ()
| {
| return f (e, argv, 0) != argv[0]  ||  f (e, argv, 1) != argv[1];
|   ;
|   return 0;
| }
configure:2819: arm-openwrt-linux-gnueabi-gcc -qlanglvl=extc89 -c -g -O2  -I/usr/include -I/usr/local/include -I./ -D_GNU_SOURCE conftest.c >&5
arm-openwrt-linux-gnueabi-gcc: unrecognized option '-qlanglvl=extc89'
In file included from /usr/include/stdio.h:28:0,
                 from conftest.c:10:
/usr/include/features.h:324:26: fatal error: bits/predefs.h: No such file or directory
compilation terminated.
configure:2819: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "qDecoder"
| #define PACKAGE_TARNAME "qdecoder"
| #define PACKAGE_VERSION "12 RELEASE"
| #define PACKAGE_STRING "qDecoder 12 RELEASE"
| #define PACKAGE_BUGREPORT "http://www.qdecoder.org/"
| #define PACKAGE_URL ""
| /* end confdefs.h.  */
| #include <stdarg.h>
| #include <stdio.h>
| #include <sys/types.h>
| #include <sys/stat.h>
| /* Most of the following tests are stolen from RCS 5.7's src/conf.sh.  */
| struct buf { int x; };
| FILE * (*rcsopen) (struct buf *, struct stat *, int);
| static char *e (p, i)
|      char **p;
|      int i;
| {
|   return p[i];
| }
| static char *f (char * (*g) (char **, int), char **p, ...)
| {
|   char *s;
|   va_list v;
|   va_start (v,p);
|   s = g (p, va_arg (v,int));
|   va_end (v);
|   return s;
| }
| 
| /* OSF 4.0 Compaq cc is some sort of almost-ANSI by default.  It has
|    function prototypes and stuff, but not '\xHH' hex character constants.
|    These don't provoke an error unfortunately, instead are silently treated
|    as 'x'.  The following induces an error, until -std is added to get
|    proper ANSI mode.  Curiously '\x00'!='x' always comes out true, for an
|    array size at least.  It's necessary to write '\x00'==0 to get something
|    that's true only with -std.  */
| int osf4_cc_array ['\x00' == 0 ? 1 : -1];
| 
| /* IBM C 6 for AIX is almost-ANSI by default, but it replaces macro parameters
|    inside strings and character constants.  */
| #define FOO(x) 'x'
| int xlc6_cc_array[FOO(a) == 'x' ? 1 : -1];
| 
| int test (int i, double x);
| struct s1 {int (*f) (int a);};
| struct s2 {int (*f) (double a);};
| int pairnames (int, char **, FILE *(*)(struct buf *, struct stat *, int), int, int);
| int argc;
| char **argv;
| int
| main ()
| {
| return f (e, argv, 0) != argv[0]  ||  f (e, argv, 1) != argv[1];
|   ;
|   return 0;
| }
configure:2819: arm-openwrt-linux-gnueabi-gcc -qlanglvl=ansi -c -g -O2  -I/usr/include -I/usr/local/include -I./ -D_GNU_SOURCE conftest.c >&5
arm-openwrt-linux-gnueabi-gcc: unrecognized option '-qlanglvl=ansi'
In file included from /usr/include/stdio.h:28:0,
                 from conftest.c:10:
/usr/include/features.h:324:26: fatal error: bits/predefs.h: No such file or directory
compilation terminated.
configure:2819: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "qDecoder"
| #define PACKAGE_TARNAME "qdecoder"
| #define PACKAGE_VERSION "12 RELEASE"
| #define PACKAGE_STRING "qDecoder 12 RELEASE"
| #define PACKAGE_BUGREPORT "http://www.qdecoder.org/"
| #define PACKAGE_URL ""
| /* end confdefs.h.  */
| #include <stdarg.h>
| #include <stdio.h>
| #include <sys/types.h>
| #include <sys/stat.h>
| /* Most of the following tests are stolen from RCS 5.7's src/conf.sh.  */
| struct buf { int x; };
| FILE * (*rcsopen) (struct buf *, struct stat *, int);
| static char *e (p, i)
|      char **p;
|      int i;
| {
|   return p[i];
| }
| static char *f (char * (*g) (char **, int), char **p, ...)
| {
|   char *s;
|   va_list v;
|   va_start (v,p);
|   s = g (p, va_arg (v,int));
|   va_end (v);
|   return s;
| }
| 
| /* OSF 4.0 Compaq cc is some sort of almost-ANSI by default.  It has
|    function prototypes and stuff, but not '\xHH' hex character constants.
|    These don't provoke an error unfortunately, instead are silently treated
|    as 'x'.  The following induces an error, until -std is added to get
|    proper ANSI mode.  Curiously '\x00'!='x' always comes out true, for an
|    array size at least.  It's necessary to write '\x00'==0 to get something
|    that's true only with -std.  */
| int osf4_cc_array ['\x00' == 0 ? 1 : -1];
| 
| /* IBM C 6 for AIX is almost-ANSI by default, but it replaces macro parameters
|    inside strings and character constants.  */
| #define FOO(x) 'x'
| int xlc6_cc_array[FOO(a) == 'x' ? 1 : -1];
| 
| int test (int i, double x);
| struct s1 {int (*f) (int a);};
| struct s2 {int (*f) (double a);};
| int pairnames (int, char **, FILE *(*)(struct buf *, struct stat *, int), int, int);
| int argc;
| char **argv;
| int
| main ()
| {
| return f (e, argv, 0) != argv[0]  ||  f (e, argv, 1) != argv[1];
|   ;
|   return 0;
| }
configure:2819: arm-openwrt-linux-gnueabi-gcc -std -c -g -O2  -I/usr/include -I/usr/local/include -I./ -D_GNU_SOURCE conftest.c >&5
cc1: error: unrecognized command line option "-std"
configure:2819: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "qDecoder"
| #define PACKAGE_TARNAME "qdecoder"
| #define PACKAGE_VERSION "12 RELEASE"
| #define PACKAGE_STRING "qDecoder 12 RELEASE"
| #define PACKAGE_BUGREPORT "http://www.qdecoder.org/"
| #define PACKAGE_URL ""
| /* end confdefs.h.  */
| #include <stdarg.h>
| #include <stdio.h>
| #include <sys/types.h>
| #include <sys/stat.h>
| /* Most of the following tests are stolen from RCS 5.7's src/conf.sh.  */
| struct buf { int x; };
| FILE * (*rcsopen) (struct buf *, struct stat *, int);
| static char *e (p, i)
|      char **p;
|      int i;
| {
|   return p[i];
| }
| static char *f (char * (*g) (char **, int), char **p, ...)
| {
|   char *s;
|   va_list v;
|   va_start (v,p);
|   s = g (p, va_arg (v,int));
|   va_end (v);
|   return s;
| }
| 
| /* OSF 4.0 Compaq cc is some sort of almost-ANSI by default.  It has
|    function prototypes and stuff, but not '\xHH' hex character constants.
|    These don't provoke an error unfortunately, instead are silently treated
|    as 'x'.  The following induces an error, until -std is added to get
|    proper ANSI mode.  Curiously '\x00'!='x' always comes out true, for an
|    array size at least.  It's necessary to write '\x00'==0 to get something
|    that's true only with -std.  */
| int osf4_cc_array ['\x00' == 0 ? 1 : -1];
| 
| /* IBM C 6 for AIX is almost-ANSI by default, but it replaces macro parameters
|    inside strings and character constants.  */
| #define FOO(x) 'x'
| int xlc6_cc_array[FOO(a) == 'x' ? 1 : -1];
| 
| int test (int i, double x);
| struct s1 {int (*f) (int a);};
| struct s2 {int (*f) (double a);};
| int pairnames (int, char **, FILE *(*)(struct buf *, struct stat *, int), int, int);
| int argc;
| char **argv;
| int
| main ()
| {
| return f (e, argv, 0) != argv[0]  ||  f (e, argv, 1) != argv[1];
|   ;
|   return 0;
| }
configure:2819: arm-openwrt-linux-gnueabi-gcc -Ae -c -g -O2  -I/usr/include -I/usr/local/include -I./ -D_GNU_SOURCE conftest.c >&5
<command-line>:0:1: error: missing '(' after predicate
In file included from /usr/include/stdio.h:28:0,
                 from conftest.c:10:
/usr/include/features.h:324:26: fatal error: bits/predefs.h: No such file or directory
compilation terminated.
configure:2819: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "qDecoder"
| #define PACKAGE_TARNAME "qdecoder"
| #define PACKAGE_VERSION "12 RELEASE"
| #define PACKAGE_STRING "qDecoder 12 RELEASE"
| #define PACKAGE_BUGREPORT "http://www.qdecoder.org/"
| #define PACKAGE_URL ""
| /* end confdefs.h.  */
| #include <stdarg.h>
| #include <stdio.h>
| #include <sys/types.h>
| #include <sys/stat.h>
| /* Most of the following tests are stolen from RCS 5.7's src/conf.sh.  */
| struct buf { int x; };
| FILE * (*rcsopen) (struct buf *, struct stat *, int);
| static char *e (p, i)
|      char **p;
|      int i;
| {
|   return p[i];
| }
| static char *f (char * (*g) (char **, int), char **p, ...)
| {
|   char *s;
|   va_list v;
|   va_start (v,p);
|   s = g (p, va_arg (v,int));
|   va_end (v);
|   return s;
| }
| 
| /* OSF 4.0 Compaq cc is some sort of almost-ANSI by default.  It has
|    function prototypes and stuff, but not '\xHH' hex character constants.
|    These don't provoke an error unfortunately, instead are silently treated
|    as 'x'.  The following induces an error, until -std is added to get
|    proper ANSI mode.  Curiously '\x00'!='x' always comes out true, for an
|    array size at least.  It's necessary to write '\x00'==0 to get something
|    that's true only with -std.  */
| int osf4_cc_array ['\x00' == 0 ? 1 : -1];
| 
| /* IBM C 6 for AIX is almost-ANSI by default, but it replaces macro parameters
|    inside strings and character constants.  */
| #define FOO(x) 'x'
| int xlc6_cc_array[FOO(a) == 'x' ? 1 : -1];
| 
| int test (int i, double x);
| struct s1 {int (*f) (int a);};
| struct s2 {int (*f) (double a);};
| int pairnames (int, char **, FILE *(*)(struct buf *, struct stat *, int), int, int);
| int argc;
| char **argv;
| int
| main ()
| {
| return f (e, argv, 0) != argv[0]  ||  f (e, argv, 1) != argv[1];
|   ;
|   return 0;
| }
configure:2819: arm-openwrt-linux-gnueabi-gcc -Aa -D_HPUX_SOURCE -c -g -O2  -I/usr/include -I/usr/local/include -I./ -D_GNU_SOURCE conftest.c >&5
<command-line>:0:1: error: missing '(' after predicate
In file included from /usr/include/stdio.h:28:0,
                 from conftest.c:10:
/usr/include/features.h:324:26: fatal error: bits/predefs.h: No such file or directory
compilation terminated.
configure:2819: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "qDecoder"
| #define PACKAGE_TARNAME "qdecoder"
| #define PACKAGE_VERSION "12 RELEASE"
| #define PACKAGE_STRING "qDecoder 12 RELEASE"
| #define PACKAGE_BUGREPORT "http://www.qdecoder.org/"
| #define PACKAGE_URL ""
| /* end confdefs.h.  */
| #include <stdarg.h>
| #include <stdio.h>
| #include <sys/types.h>
| #include <sys/stat.h>
| /* Most of the following tests are stolen from RCS 5.7's src/conf.sh.  */
| struct buf { int x; };
| FILE * (*rcsopen) (struct buf *, struct stat *, int);
| static char *e (p, i)
|      char **p;
|      int i;
| {
|   return p[i];
| }
| static char *f (char * (*g) (char **, int), char **p, ...)
| {
|   char *s;
|   va_list v;
|   va_start (v,p);
|   s = g (p, va_arg (v,int));
|   va_end (v);
|   return s;
| }
| 
| /* OSF 4.0 Compaq cc is some sort of almost-ANSI by default.  It has
|    function prototypes and stuff, but not '\xHH' hex character constants.
|    These don't provoke an error unfortunately, instead are silently treated
|    as 'x'.  The following induces an error, until -std is added to get
|    proper ANSI mode.  Curiously '\x00'!='x' always comes out true, for an
|    array size at least.  It's necessary to write '\x00'==0 to get something
|    that's true only with -std.  */
| int osf4_cc_array ['\x00' == 0 ? 1 : -1];
| 
| /* IBM C 6 for AIX is almost-ANSI by default, but it replaces macro parameters
|    inside strings and character constants.  */
| #define FOO(x) 'x'
| int xlc6_cc_array[FOO(a) == 'x' ? 1 : -1];
| 
| int test (int i, double x);
| struct s1 {int (*f) (int a);};
| struct s2 {int (*f) (double a);};
| int pairnames (int, char **, FILE *(*)(struct buf *, struct stat *, int), int, int);
| int argc;
| char **argv;
| int
| main ()
| {
| return f (e, argv, 0) != argv[0]  ||  f (e, argv, 1) != argv[1];
|   ;
|   return 0;
| }
configure:2819: arm-openwrt-linux-gnueabi-gcc -Xc -D__EXTENSIONS__ -c -g -O2  -I/usr/include -I/usr/local/include -I./ -D_GNU_SOURCE conftest.c >&5
arm-openwrt-linux-gnueabi-gcc: unrecognized option '-Xc'
In file included from /usr/include/stdio.h:28:0,
                 from conftest.c:10:
/usr/include/features.h:324:26: fatal error: bits/predefs.h: No such file or directory
compilation terminated.
configure:2819: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "qDecoder"
| #define PACKAGE_TARNAME "qdecoder"
| #define PACKAGE_VERSION "12 RELEASE"
| #define PACKAGE_STRING "qDecoder 12 RELEASE"
| #define PACKAGE_BUGREPORT "http://www.qdecoder.org/"
| #define PACKAGE_URL ""
| /* end confdefs.h.  */
| #include <stdarg.h>
| #include <stdio.h>
| #include <sys/types.h>
| #include <sys/stat.h>
| /* Most of the following tests are stolen from RCS 5.7's src/conf.sh.  */
| struct buf { int x; };
| FILE * (*rcsopen) (struct buf *, struct stat *, int);
| static char *e (p, i)
|      char **p;
|      int i;
| {
|   return p[i];
| }
| static char *f (char * (*g) (char **, int), char **p, ...)
| {
|   char *s;
|   va_list v;
|   va_start (v,p);
|   s = g (p, va_arg (v,int));
|   va_end (v);
|   return s;
| }
| 
| /* OSF 4.0 Compaq cc is some sort of almost-ANSI by default.  It has
|    function prototypes and stuff, but not '\xHH' hex character constants.
|    These don't provoke an error unfortunately, instead are silently treated
|    as 'x'.  The following induces an error, until -std is added to get
|    proper ANSI mode.  Curiously '\x00'!='x' always comes out true, for an
|    array size at least.  It's necessary to write '\x00'==0 to get something
|    that's true only with -std.  */
| int osf4_cc_array ['\x00' == 0 ? 1 : -1];
| 
| /* IBM C 6 for AIX is almost-ANSI by default, but it replaces macro parameters
|    inside strings and character constants.  */
| #define FOO(x) 'x'
| int xlc6_cc_array[FOO(a) == 'x' ? 1 : -1];
| 
| int test (int i, double x);
| struct s1 {int (*f) (int a);};
| struct s2 {int (*f) (double a);};
| int pairnames (int, char **, FILE *(*)(struct buf *, struct stat *, int), int, int);
| int argc;
| char **argv;
| int
| main ()
| {
| return f (e, argv, 0) != argv[0]  ||  f (e, argv, 1) != argv[1];
|   ;
|   return 0;
| }
configure:2835: result: unsupported
configure:2857: checking for arm-openwrt-linux-gnueabi-gcc option to accept ISO C99
configure:3006: arm-openwrt-linux-gnueabi-gcc  -c -Wall -fPIC  -I/usr/include -I/usr/local/include -I./ -D_GNU_SOURCE conftest.c >&5
In file included from /usr/include/stdlib.h:25:0,
                 from conftest.c:11:
/usr/include/features.h:324:26: fatal error: bits/predefs.h: No such file or directory
compilation terminated.
configure:3006: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "qDecoder"
| #define PACKAGE_TARNAME "qdecoder"
| #define PACKAGE_VERSION "12 RELEASE"
| #define PACKAGE_STRING "qDecoder 12 RELEASE"
| #define PACKAGE_BUGREPORT "http://www.qdecoder.org/"
| #define PACKAGE_URL ""
| /* end confdefs.h.  */
| #include <stdarg.h>
| #include <stdbool.h>
| #include <stdlib.h>
| #include <wchar.h>
| #include <stdio.h>
| 
| // Check varargs macros.  These examples are taken from C99 6.10.3.5.
| #define debug(...) fprintf (stderr, __VA_ARGS__)
| #define showlist(...) puts (#__VA_ARGS__)
| #define report(test,...) ((test) ? puts (#test) : printf (__VA_ARGS__))
| static void
| test_varargs_macros (void)
| {
|   int x = 1234;
|   int y = 5678;
|   debug ("Flag");
|   debug ("X = %d\n", x);
|   showlist (The first, second, and third items.);
|   report (x>y, "x is %d but y is %d", x, y);
| }
| 
| // Check long long types.
| #define BIG64 18446744073709551615ull
| #define BIG32 4294967295ul
| #define BIG_OK (BIG64 / BIG32 == 4294967297ull && BIG64 % BIG32 == 0)
| #if !BIG_OK
|   your preprocessor is broken;
| #endif
| #if BIG_OK
| #else
|   your preprocessor is broken;
| #endif
| static long long int bignum = -9223372036854775807LL;
| static unsigned long long int ubignum = BIG64;
| 
| struct incomplete_array
| {
|   int datasize;
|   double data[];
| };
| 
| struct named_init {
|   int number;
|   const wchar_t *name;
|   double average;
| };
| 
| typedef const char *ccp;
| 
| static inline int
| test_restrict (ccp restrict text)
| {
|   // See if C++-style comments work.
|   // Iterate through items via the restricted pointer.
|   // Also check for declarations in for loops.
|   for (unsigned int i = 0; *(text+i) != '\0'; ++i)
|     continue;
|   return 0;
| }
| 
| // Check varargs and va_copy.
| static void
| test_varargs (const char *format, ...)
| {
|   va_list args;
|   va_start (args, format);
|   va_list args_copy;
|   va_copy (args_copy, args);
| 
|   const char *str;
|   int number;
|   float fnumber;
| 
|   while (*format)
|     {
|       switch (*format++)
| 	{
| 	case 's': // string
| 	  str = va_arg (args_copy, const char *);
| 	  break;
| 	case 'd': // int
| 	  number = va_arg (args_copy, int);
| 	  break;
| 	case 'f': // float
| 	  fnumber = va_arg (args_copy, double);
| 	  break;
| 	default:
| 	  break;
| 	}
|     }
|   va_end (args_copy);
|   va_end (args);
| }
| 
| int
| main ()
| {
| 
|   // Check bool.
|   _Bool success = false;
| 
|   // Check restrict.
|   if (test_restrict ("String literal") == 0)
|     success = true;
|   char *restrict newvar = "Another string";
| 
|   // Check varargs.
|   test_varargs ("s, d' f .", "string", 65, 34.234);
|   test_varargs_macros ();
| 
|   // Check flexible array members.
|   struct incomplete_array *ia =
|     malloc (sizeof (struct incomplete_array) + (sizeof (double) * 10));
|   ia->datasize = 10;
|   for (int i = 0; i < ia->datasize; ++i)
|     ia->data[i] = i * 1.234;
| 
|   // Check named initializers.
|   struct named_init ni = {
|     .number = 34,
|     .name = L"Test wide string",
|     .average = 543.34343,
|   };
| 
|   ni.number = 58;
| 
|   int dynamic_array[ni.number];
|   dynamic_array[ni.number - 1] = 543;
| 
|   // work around unused variable warnings
|   return (!success || bignum == 0LL || ubignum == 0uLL || newvar[0] == 'x'
| 	  || dynamic_array[ni.number - 1] != 543);
| 
|   ;
|   return 0;
| }
configure:3006: arm-openwrt-linux-gnueabi-gcc -std=gnu99 -c -Wall -fPIC  -I/usr/include -I/usr/local/include -I./ -D_GNU_SOURCE conftest.c >&5
In file included from /usr/include/stdlib.h:25:0,
                 from conftest.c:11:
/usr/include/features.h:324:26: fatal error: bits/predefs.h: No such file or directory
compilation terminated.
configure:3006: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "qDecoder"
| #define PACKAGE_TARNAME "qdecoder"
| #define PACKAGE_VERSION "12 RELEASE"
| #define PACKAGE_STRING "qDecoder 12 RELEASE"
| #define PACKAGE_BUGREPORT "http://www.qdecoder.org/"
| #define PACKAGE_URL ""
| /* end confdefs.h.  */
| #include <stdarg.h>
| #include <stdbool.h>
| #include <stdlib.h>
| #include <wchar.h>
| #include <stdio.h>
| 
| // Check varargs macros.  These examples are taken from C99 6.10.3.5.
| #define debug(...) fprintf (stderr, __VA_ARGS__)
| #define showlist(...) puts (#__VA_ARGS__)
| #define report(test,...) ((test) ? puts (#test) : printf (__VA_ARGS__))
| static void
| test_varargs_macros (void)
| {
|   int x = 1234;
|   int y = 5678;
|   debug ("Flag");
|   debug ("X = %d\n", x);
|   showlist (The first, second, and third items.);
|   report (x>y, "x is %d but y is %d", x, y);
| }
| 
| // Check long long types.
| #define BIG64 18446744073709551615ull
| #define BIG32 4294967295ul
| #define BIG_OK (BIG64 / BIG32 == 4294967297ull && BIG64 % BIG32 == 0)
| #if !BIG_OK
|   your preprocessor is broken;
| #endif
| #if BIG_OK
| #else
|   your preprocessor is broken;
| #endif
| static long long int bignum = -9223372036854775807LL;
| static unsigned long long int ubignum = BIG64;
| 
| struct incomplete_array
| {
|   int datasize;
|   double data[];
| };
| 
| struct named_init {
|   int number;
|   const wchar_t *name;
|   double average;
| };
| 
| typedef const char *ccp;
| 
| static inline int
| test_restrict (ccp restrict text)
| {
|   // See if C++-style comments work.
|   // Iterate through items via the restricted pointer.
|   // Also check for declarations in for loops.
|   for (unsigned int i = 0; *(text+i) != '\0'; ++i)
|     continue;
|   return 0;
| }
| 
| // Check varargs and va_copy.
| static void
| test_varargs (const char *format, ...)
| {
|   va_list args;
|   va_start (args, format);
|   va_list args_copy;
|   va_copy (args_copy, args);
| 
|   const char *str;
|   int number;
|   float fnumber;
| 
|   while (*format)
|     {
|       switch (*format++)
| 	{
| 	case 's': // string
| 	  str = va_arg (args_copy, const char *);
| 	  break;
| 	case 'd': // int
| 	  number = va_arg (args_copy, int);
| 	  break;
| 	case 'f': // float
| 	  fnumber = va_arg (args_copy, double);
| 	  break;
| 	default:
| 	  break;
| 	}
|     }
|   va_end (args_copy);
|   va_end (args);
| }
| 
| int
| main ()
| {
| 
|   // Check bool.
|   _Bool success = false;
| 
|   // Check restrict.
|   if (test_restrict ("String literal") == 0)
|     success = true;
|   char *restrict newvar = "Another string";
| 
|   // Check varargs.
|   test_varargs ("s, d' f .", "string", 65, 34.234);
|   test_varargs_macros ();
| 
|   // Check flexible array members.
|   struct incomplete_array *ia =
|     malloc (sizeof (struct incomplete_array) + (sizeof (double) * 10));
|   ia->datasize = 10;
|   for (int i = 0; i < ia->datasize; ++i)
|     ia->data[i] = i * 1.234;
| 
|   // Check named initializers.
|   struct named_init ni = {
|     .number = 34,
|     .name = L"Test wide string",
|     .average = 543.34343,
|   };
| 
|   ni.number = 58;
| 
|   int dynamic_array[ni.number];
|   dynamic_array[ni.number - 1] = 543;
| 
|   // work around unused variable warnings
|   return (!success || bignum == 0LL || ubignum == 0uLL || newvar[0] == 'x'
| 	  || dynamic_array[ni.number - 1] != 543);
| 
|   ;
|   return 0;
| }
configure:3006: arm-openwrt-linux-gnueabi-gcc -std=c99 -c -Wall -fPIC  -I/usr/include -I/usr/local/include -I./ -D_GNU_SOURCE conftest.c >&5
In file included from /usr/include/stdlib.h:25:0,
                 from conftest.c:11:
/usr/include/features.h:324:26: fatal error: bits/predefs.h: No such file or directory
compilation terminated.
configure:3006: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "qDecoder"
| #define PACKAGE_TARNAME "qdecoder"
| #define PACKAGE_VERSION "12 RELEASE"
| #define PACKAGE_STRING "qDecoder 12 RELEASE"
| #define PACKAGE_BUGREPORT "http://www.qdecoder.org/"
| #define PACKAGE_URL ""
| /* end confdefs.h.  */
| #include <stdarg.h>
| #include <stdbool.h>
| #include <stdlib.h>
| #include <wchar.h>
| #include <stdio.h>
| 
| // Check varargs macros.  These examples are taken from C99 6.10.3.5.
| #define debug(...) fprintf (stderr, __VA_ARGS__)
| #define showlist(...) puts (#__VA_ARGS__)
| #define report(test,...) ((test) ? puts (#test) : printf (__VA_ARGS__))
| static void
| test_varargs_macros (void)
| {
|   int x = 1234;
|   int y = 5678;
|   debug ("Flag");
|   debug ("X = %d\n", x);
|   showlist (The first, second, and third items.);
|   report (x>y, "x is %d but y is %d", x, y);
| }
| 
| // Check long long types.
| #define BIG64 18446744073709551615ull
| #define BIG32 4294967295ul
| #define BIG_OK (BIG64 / BIG32 == 4294967297ull && BIG64 % BIG32 == 0)
| #if !BIG_OK
|   your preprocessor is broken;
| #endif
| #if BIG_OK
| #else
|   your preprocessor is broken;
| #endif
| static long long int bignum = -9223372036854775807LL;
| static unsigned long long int ubignum = BIG64;
| 
| struct incomplete_array
| {
|   int datasize;
|   double data[];
| };
| 
| struct named_init {
|   int number;
|   const wchar_t *name;
|   double average;
| };
| 
| typedef const char *ccp;
| 
| static inline int
| test_restrict (ccp restrict text)
| {
|   // See if C++-style comments work.
|   // Iterate through items via the restricted pointer.
|   // Also check for declarations in for loops.
|   for (unsigned int i = 0; *(text+i) != '\0'; ++i)
|     continue;
|   return 0;
| }
| 
| // Check varargs and va_copy.
| static void
| test_varargs (const char *format, ...)
| {
|   va_list args;
|   va_start (args, format);
|   va_list args_copy;
|   va_copy (args_copy, args);
| 
|   const char *str;
|   int number;
|   float fnumber;
| 
|   while (*format)
|     {
|       switch (*format++)
| 	{
| 	case 's': // string
| 	  str = va_arg (args_copy, const char *);
| 	  break;
| 	case 'd': // int
| 	  number = va_arg (args_copy, int);
| 	  break;
| 	case 'f': // float
| 	  fnumber = va_arg (args_copy, double);
| 	  break;
| 	default:
| 	  break;
| 	}
|     }
|   va_end (args_copy);
|   va_end (args);
| }
| 
| int
| main ()
| {
| 
|   // Check bool.
|   _Bool success = false;
| 
|   // Check restrict.
|   if (test_restrict ("String literal") == 0)
|     success = true;
|   char *restrict newvar = "Another string";
| 
|   // Check varargs.
|   test_varargs ("s, d' f .", "string", 65, 34.234);
|   test_varargs_macros ();
| 
|   // Check flexible array members.
|   struct incomplete_array *ia =
|     malloc (sizeof (struct incomplete_array) + (sizeof (double) * 10));
|   ia->datasize = 10;
|   for (int i = 0; i < ia->datasize; ++i)
|     ia->data[i] = i * 1.234;
| 
|   // Check named initializers.
|   struct named_init ni = {
|     .number = 34,
|     .name = L"Test wide string",
|     .average = 543.34343,
|   };
| 
|   ni.number = 58;
| 
|   int dynamic_array[ni.number];
|   dynamic_array[ni.number - 1] = 543;
| 
|   // work around unused variable warnings
|   return (!success || bignum == 0LL || ubignum == 0uLL || newvar[0] == 'x'
| 	  || dynamic_array[ni.number - 1] != 543);
| 
|   ;
|   return 0;
| }
configure:3006: arm-openwrt-linux-gnueabi-gcc -c99 -c -Wall -fPIC  -I/usr/include -I/usr/local/include -I./ -D_GNU_SOURCE conftest.c >&5
arm-openwrt-linux-gnueabi-gcc: unrecognized option '-c99'
In file included from /usr/include/stdlib.h:25:0,
                 from conftest.c:11:
/usr/include/features.h:324:26: fatal error: bits/predefs.h: No such file or directory
compilation terminated.
configure:3006: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "qDecoder"
| #define PACKAGE_TARNAME "qdecoder"
| #define PACKAGE_VERSION "12 RELEASE"
| #define PACKAGE_STRING "qDecoder 12 RELEASE"
| #define PACKAGE_BUGREPORT "http://www.qdecoder.org/"
| #define PACKAGE_URL ""
| /* end confdefs.h.  */
| #include <stdarg.h>
| #include <stdbool.h>
| #include <stdlib.h>
| #include <wchar.h>
| #include <stdio.h>
| 
| // Check varargs macros.  These examples are taken from C99 6.10.3.5.
| #define debug(...) fprintf (stderr, __VA_ARGS__)
| #define showlist(...) puts (#__VA_ARGS__)
| #define report(test,...) ((test) ? puts (#test) : printf (__VA_ARGS__))
| static void
| test_varargs_macros (void)
| {
|   int x = 1234;
|   int y = 5678;
|   debug ("Flag");
|   debug ("X = %d\n", x);
|   showlist (The first, second, and third items.);
|   report (x>y, "x is %d but y is %d", x, y);
| }
| 
| // Check long long types.
| #define BIG64 18446744073709551615ull
| #define BIG32 4294967295ul
| #define BIG_OK (BIG64 / BIG32 == 4294967297ull && BIG64 % BIG32 == 0)
| #if !BIG_OK
|   your preprocessor is broken;
| #endif
| #if BIG_OK
| #else
|   your preprocessor is broken;
| #endif
| static long long int bignum = -9223372036854775807LL;
| static unsigned long long int ubignum = BIG64;
| 
| struct incomplete_array
| {
|   int datasize;
|   double data[];
| };
| 
| struct named_init {
|   int number;
|   const wchar_t *name;
|   double average;
| };
| 
| typedef const char *ccp;
| 
| static inline int
| test_restrict (ccp restrict text)
| {
|   // See if C++-style comments work.
|   // Iterate through items via the restricted pointer.
|   // Also check for declarations in for loops.
|   for (unsigned int i = 0; *(text+i) != '\0'; ++i)
|     continue;
|   return 0;
| }
| 
| // Check varargs and va_copy.
| static void
| test_varargs (const char *format, ...)
| {
|   va_list args;
|   va_start (args, format);
|   va_list args_copy;
|   va_copy (args_copy, args);
| 
|   const char *str;
|   int number;
|   float fnumber;
| 
|   while (*format)
|     {
|       switch (*format++)
| 	{
| 	case 's': // string
| 	  str = va_arg (args_copy, const char *);
| 	  break;
| 	case 'd': // int
| 	  number = va_arg (args_copy, int);
| 	  break;
| 	case 'f': // float
| 	  fnumber = va_arg (args_copy, double);
| 	  break;
| 	default:
| 	  break;
| 	}
|     }
|   va_end (args_copy);
|   va_end (args);
| }
| 
| int
| main ()
| {
| 
|   // Check bool.
|   _Bool success = false;
| 
|   // Check restrict.
|   if (test_restrict ("String literal") == 0)
|     success = true;
|   char *restrict newvar = "Another string";
| 
|   // Check varargs.
|   test_varargs ("s, d' f .", "string", 65, 34.234);
|   test_varargs_macros ();
| 
|   // Check flexible array members.
|   struct incomplete_array *ia =
|     malloc (sizeof (struct incomplete_array) + (sizeof (double) * 10));
|   ia->datasize = 10;
|   for (int i = 0; i < ia->datasize; ++i)
|     ia->data[i] = i * 1.234;
| 
|   // Check named initializers.
|   struct named_init ni = {
|     .number = 34,
|     .name = L"Test wide string",
|     .average = 543.34343,
|   };
| 
|   ni.number = 58;
| 
|   int dynamic_array[ni.number];
|   dynamic_array[ni.number - 1] = 543;
| 
|   // work around unused variable warnings
|   return (!success || bignum == 0LL || ubignum == 0uLL || newvar[0] == 'x'
| 	  || dynamic_array[ni.number - 1] != 543);
| 
|   ;
|   return 0;
| }
configure:3006: arm-openwrt-linux-gnueabi-gcc -AC99 -c -Wall -fPIC  -I/usr/include -I/usr/local/include -I./ -D_GNU_SOURCE conftest.c >&5
<command-line>:0:1: error: missing '(' after predicate
In file included from /usr/include/stdlib.h:25:0,
                 from conftest.c:11:
/usr/include/features.h:324:26: fatal error: bits/predefs.h: No such file or directory
compilation terminated.
configure:3006: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "qDecoder"
| #define PACKAGE_TARNAME "qdecoder"
| #define PACKAGE_VERSION "12 RELEASE"
| #define PACKAGE_STRING "qDecoder 12 RELEASE"
| #define PACKAGE_BUGREPORT "http://www.qdecoder.org/"
| #define PACKAGE_URL ""
| /* end confdefs.h.  */
| #include <stdarg.h>
| #include <stdbool.h>
| #include <stdlib.h>
| #include <wchar.h>
| #include <stdio.h>
| 
| // Check varargs macros.  These examples are taken from C99 6.10.3.5.
| #define debug(...) fprintf (stderr, __VA_ARGS__)
| #define showlist(...) puts (#__VA_ARGS__)
| #define report(test,...) ((test) ? puts (#test) : printf (__VA_ARGS__))
| static void
| test_varargs_macros (void)
| {
|   int x = 1234;
|   int y = 5678;
|   debug ("Flag");
|   debug ("X = %d\n", x);
|   showlist (The first, second, and third items.);
|   report (x>y, "x is %d but y is %d", x, y);
| }
| 
| // Check long long types.
| #define BIG64 18446744073709551615ull
| #define BIG32 4294967295ul
| #define BIG_OK (BIG64 / BIG32 == 4294967297ull && BIG64 % BIG32 == 0)
| #if !BIG_OK
|   your preprocessor is broken;
| #endif
| #if BIG_OK
| #else
|   your preprocessor is broken;
| #endif
| static long long int bignum = -9223372036854775807LL;
| static unsigned long long int ubignum = BIG64;
| 
| struct incomplete_array
| {
|   int datasize;
|   double data[];
| };
| 
| struct named_init {
|   int number;
|   const wchar_t *name;
|   double average;
| };
| 
| typedef const char *ccp;
| 
| static inline int
| test_restrict (ccp restrict text)
| {
|   // See if C++-style comments work.
|   // Iterate through items via the restricted pointer.
|   // Also check for declarations in for loops.
|   for (unsigned int i = 0; *(text+i) != '\0'; ++i)
|     continue;
|   return 0;
| }
| 
| // Check varargs and va_copy.
| static void
| test_varargs (const char *format, ...)
| {
|   va_list args;
|   va_start (args, format);
|   va_list args_copy;
|   va_copy (args_copy, args);
| 
|   const char *str;
|   int number;
|   float fnumber;
| 
|   while (*format)
|     {
|       switch (*format++)
| 	{
| 	case 's': // string
| 	  str = va_arg (args_copy, const char *);
| 	  break;
| 	case 'd': // int
| 	  number = va_arg (args_copy, int);
| 	  break;
| 	case 'f': // float
| 	  fnumber = va_arg (args_copy, double);
| 	  break;
| 	default:
| 	  break;
| 	}
|     }
|   va_end (args_copy);
|   va_end (args);
| }
| 
| int
| main ()
| {
| 
|   // Check bool.
|   _Bool success = false;
| 
|   // Check restrict.
|   if (test_restrict ("String literal") == 0)
|     success = true;
|   char *restrict newvar = "Another string";
| 
|   // Check varargs.
|   test_varargs ("s, d' f .", "string", 65, 34.234);
|   test_varargs_macros ();
| 
|   // Check flexible array members.
|   struct incomplete_array *ia =
|     malloc (sizeof (struct incomplete_array) + (sizeof (double) * 10));
|   ia->datasize = 10;
|   for (int i = 0; i < ia->datasize; ++i)
|     ia->data[i] = i * 1.234;
| 
|   // Check named initializers.
|   struct named_init ni = {
|     .number = 34,
|     .name = L"Test wide string",
|     .average = 543.34343,
|   };
| 
|   ni.number = 58;
| 
|   int dynamic_array[ni.number];
|   dynamic_array[ni.number - 1] = 543;
| 
|   // work around unused variable warnings
|   return (!success || bignum == 0LL || ubignum == 0uLL || newvar[0] == 'x'
| 	  || dynamic_array[ni.number - 1] != 543);
| 
|   ;
|   return 0;
| }
configure:3006: arm-openwrt-linux-gnueabi-gcc -xc99=all -c -Wall -fPIC  -I/usr/include -I/usr/local/include -I./ -D_GNU_SOURCE conftest.c >&5
arm-openwrt-linux-gnueabi-gcc: language c99=all not recognized
arm-openwrt-linux-gnueabi-gcc: language c99=all not recognized
arm-openwrt-linux-gnueabi-gcc: conftest.c: linker input file unused because linking not done
configure:3006: $? = 0
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "qDecoder"
| #define PACKAGE_TARNAME "qdecoder"
| #define PACKAGE_VERSION "12 RELEASE"
| #define PACKAGE_STRING "qDecoder 12 RELEASE"
| #define PACKAGE_BUGREPORT "http://www.qdecoder.org/"
| #define PACKAGE_URL ""
| /* end confdefs.h.  */
| #include <stdarg.h>
| #include <stdbool.h>
| #include <stdlib.h>
| #include <wchar.h>
| #include <stdio.h>
| 
| // Check varargs macros.  These examples are taken from C99 6.10.3.5.
| #define debug(...) fprintf (stderr, __VA_ARGS__)
| #define showlist(...) puts (#__VA_ARGS__)
| #define report(test,...) ((test) ? puts (#test) : printf (__VA_ARGS__))
| static void
| test_varargs_macros (void)
| {
|   int x = 1234;
|   int y = 5678;
|   debug ("Flag");
|   debug ("X = %d\n", x);
|   showlist (The first, second, and third items.);
|   report (x>y, "x is %d but y is %d", x, y);
| }
| 
| // Check long long types.
| #define BIG64 18446744073709551615ull
| #define BIG32 4294967295ul
| #define BIG_OK (BIG64 / BIG32 == 4294967297ull && BIG64 % BIG32 == 0)
| #if !BIG_OK
|   your preprocessor is broken;
| #endif
| #if BIG_OK
| #else
|   your preprocessor is broken;
| #endif
| static long long int bignum = -9223372036854775807LL;
| static unsigned long long int ubignum = BIG64;
| 
| struct incomplete_array
| {
|   int datasize;
|   double data[];
| };
| 
| struct named_init {
|   int number;
|   const wchar_t *name;
|   double average;
| };
| 
| typedef const char *ccp;
| 
| static inline int
| test_restrict (ccp restrict text)
| {
|   // See if C++-style comments work.
|   // Iterate through items via the restricted pointer.
|   // Also check for declarations in for loops.
|   for (unsigned int i = 0; *(text+i) != '\0'; ++i)
|     continue;
|   return 0;
| }
| 
| // Check varargs and va_copy.
| static void
| test_varargs (const char *format, ...)
| {
|   va_list args;
|   va_start (args, format);
|   va_list args_copy;
|   va_copy (args_copy, args);
| 
|   const char *str;
|   int number;
|   float fnumber;
| 
|   while (*format)
|     {
|       switch (*format++)
| 	{
| 	case 's': // string
| 	  str = va_arg (args_copy, const char *);
| 	  break;
| 	case 'd': // int
| 	  number = va_arg (args_copy, int);
| 	  break;
| 	case 'f': // float
| 	  fnumber = va_arg (args_copy, double);
| 	  break;
| 	default:
| 	  break;
| 	}
|     }
|   va_end (args_copy);
|   va_end (args);
| }
| 
| int
| main ()
| {
| 
|   // Check bool.
|   _Bool success = false;
| 
|   // Check restrict.
|   if (test_restrict ("String literal") == 0)
|     success = true;
|   char *restrict newvar = "Another string";
| 
|   // Check varargs.
|   test_varargs ("s, d' f .", "string", 65, 34.234);
|   test_varargs_macros ();
| 
|   // Check flexible array members.
|   struct incomplete_array *ia =
|     malloc (sizeof (struct incomplete_array) + (sizeof (double) * 10));
|   ia->datasize = 10;
|   for (int i = 0; i < ia->datasize; ++i)
|     ia->data[i] = i * 1.234;
| 
|   // Check named initializers.
|   struct named_init ni = {
|     .number = 34,
|     .name = L"Test wide string",
|     .average = 543.34343,
|   };
| 
|   ni.number = 58;
| 
|   int dynamic_array[ni.number];
|   dynamic_array[ni.number - 1] = 543;
| 
|   // work around unused variable warnings
|   return (!success || bignum == 0LL || ubignum == 0uLL || newvar[0] == 'x'
| 	  || dynamic_array[ni.number - 1] != 543);
| 
|   ;
|   return 0;
| }
configure:3006: arm-openwrt-linux-gnueabi-gcc -qlanglvl=extc99 -c -Wall -fPIC  -I/usr/include -I/usr/local/include -I./ -D_GNU_SOURCE conftest.c >&5
arm-openwrt-linux-gnueabi-gcc: unrecognized option '-qlanglvl=extc99'
In file included from /usr/include/stdlib.h:25:0,
                 from conftest.c:11:
/usr/include/features.h:324:26: fatal error: bits/predefs.h: No such file or directory
compilation terminated.
configure:3006: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "qDecoder"
| #define PACKAGE_TARNAME "qdecoder"
| #define PACKAGE_VERSION "12 RELEASE"
| #define PACKAGE_STRING "qDecoder 12 RELEASE"
| #define PACKAGE_BUGREPORT "http://www.qdecoder.org/"
| #define PACKAGE_URL ""
| /* end confdefs.h.  */
| #include <stdarg.h>
| #include <stdbool.h>
| #include <stdlib.h>
| #include <wchar.h>
| #include <stdio.h>
| 
| // Check varargs macros.  These examples are taken from C99 6.10.3.5.
| #define debug(...) fprintf (stderr, __VA_ARGS__)
| #define showlist(...) puts (#__VA_ARGS__)
| #define report(test,...) ((test) ? puts (#test) : printf (__VA_ARGS__))
| static void
| test_varargs_macros (void)
| {
|   int x = 1234;
|   int y = 5678;
|   debug ("Flag");
|   debug ("X = %d\n", x);
|   showlist (The first, second, and third items.);
|   report (x>y, "x is %d but y is %d", x, y);
| }
| 
| // Check long long types.
| #define BIG64 18446744073709551615ull
| #define BIG32 4294967295ul
| #define BIG_OK (BIG64 / BIG32 == 4294967297ull && BIG64 % BIG32 == 0)
| #if !BIG_OK
|   your preprocessor is broken;
| #endif
| #if BIG_OK
| #else
|   your preprocessor is broken;
| #endif
| static long long int bignum = -9223372036854775807LL;
| static unsigned long long int ubignum = BIG64;
| 
| struct incomplete_array
| {
|   int datasize;
|   double data[];
| };
| 
| struct named_init {
|   int number;
|   const wchar_t *name;
|   double average;
| };
| 
| typedef const char *ccp;
| 
| static inline int
| test_restrict (ccp restrict text)
| {
|   // See if C++-style comments work.
|   // Iterate through items via the restricted pointer.
|   // Also check for declarations in for loops.
|   for (unsigned int i = 0; *(text+i) != '\0'; ++i)
|     continue;
|   return 0;
| }
| 
| // Check varargs and va_copy.
| static void
| test_varargs (const char *format, ...)
| {
|   va_list args;
|   va_start (args, format);
|   va_list args_copy;
|   va_copy (args_copy, args);
| 
|   const char *str;
|   int number;
|   float fnumber;
| 
|   while (*format)
|     {
|       switch (*format++)
| 	{
| 	case 's': // string
| 	  str = va_arg (args_copy, const char *);
| 	  break;
| 	case 'd': // int
| 	  number = va_arg (args_copy, int);
| 	  break;
| 	case 'f': // float
| 	  fnumber = va_arg (args_copy, double);
| 	  break;
| 	default:
| 	  break;
| 	}
|     }
|   va_end (args_copy);
|   va_end (args);
| }
| 
| int
| main ()
| {
| 
|   // Check bool.
|   _Bool success = false;
| 
|   // Check restrict.
|   if (test_restrict ("String literal") == 0)
|     success = true;
|   char *restrict newvar = "Another string";
| 
|   // Check varargs.
|   test_varargs ("s, d' f .", "string", 65, 34.234);
|   test_varargs_macros ();
| 
|   // Check flexible array members.
|   struct incomplete_array *ia =
|     malloc (sizeof (struct incomplete_array) + (sizeof (double) * 10));
|   ia->datasize = 10;
|   for (int i = 0; i < ia->datasize; ++i)
|     ia->data[i] = i * 1.234;
| 
|   // Check named initializers.
|   struct named_init ni = {
|     .number = 34,
|     .name = L"Test wide string",
|     .average = 543.34343,
|   };
| 
|   ni.number = 58;
| 
|   int dynamic_array[ni.number];
|   dynamic_array[ni.number - 1] = 543;
| 
|   // work around unused variable warnings
|   return (!success || bignum == 0LL || ubignum == 0uLL || newvar[0] == 'x'
| 	  || dynamic_array[ni.number - 1] != 543);
| 
|   ;
|   return 0;
| }
configure:3022: result: unsupported
configure:3035: error: in `/mnt/work/webadmin-fmh/cgi/qdecoder-12.0.4':
configure:3037: error: Compiler does not support C99 mode.
See `config.log' for more details

## ---------------- ##
## Cache variables. ##
## ---------------- ##

ac_cv_c_compiler_gnu=yes
ac_cv_env_CC_set=set
ac_cv_env_CC_value=arm-openwrt-linux-gnueabi-gcc
ac_cv_env_CFLAGS_set=
ac_cv_env_CFLAGS_value=
ac_cv_env_CPPFLAGS_set=
ac_cv_env_CPPFLAGS_value=
ac_cv_env_CPP_set=
ac_cv_env_CPP_value=
ac_cv_env_LDFLAGS_set=
ac_cv_env_LDFLAGS_value=
ac_cv_env_LIBS_set=
ac_cv_env_LIBS_value=
ac_cv_env_build_alias_set=
ac_cv_env_build_alias_value=
ac_cv_env_host_alias_set=set
ac_cv_env_host_alias_value=arm
ac_cv_env_target_alias_set=
ac_cv_env_target_alias_value=
ac_cv_objext=o
ac_cv_prog_CC=arm-openwrt-linux-gnueabi-gcc
ac_cv_prog_cc_c89=no
ac_cv_prog_cc_c99=no
ac_cv_prog_cc_g=yes

## ----------------- ##
## Output variables. ##
## ----------------- ##

AR='arm-openwrt-linux-gnueabi-ar'
CC='arm-openwrt-linux-gnueabi-gcc'
CFLAGS='-Wall -fPIC'
CHMOD=''
CPP=''
CPPFLAGS=' -I/usr/include -I/usr/local/include -I./ -D_GNU_SOURCE'
DEFS=''
ECHO_C=''
ECHO_N='-n'
ECHO_T=''
EGREP=''
EXEEXT=''
GREP=''
INSTALL_DATA=''
INSTALL_PROGRAM=''
INSTALL_SCRIPT=''
LD=''
LDFLAGS=' -L/usr/lib -L/usr/local/lib'
LIBOBJS=''
LIBS=''
LN_S=''
LTLIBOBJS=''
OBJEXT='o'
PACKAGE_BUGREPORT='http://www.qdecoder.org/'
PACKAGE_NAME='qDecoder'
PACKAGE_STRING='qDecoder 12 RELEASE'
PACKAGE_TARNAME='qdecoder'
PACKAGE_URL=''
PACKAGE_VERSION='12 RELEASE'
PATH_SEPARATOR=':'
RANLIB=''
RM=''
SET_MAKE=''
SHELL='/bin/bash'
ac_ct_CC=''
bindir='${exec_prefix}/bin'
build_alias=''
datadir='${datarootdir}'
datarootdir='${prefix}/share'
docdir='${datarootdir}/doc/${PACKAGE_TARNAME}'
dvidir='${docdir}'
exec_prefix='NONE'
host_alias='arm'
htmldir='${docdir}'
includedir='${prefix}/include'
infodir='${datarootdir}/info'
libdir='${exec_prefix}/lib'
libexecdir='${exec_prefix}/libexec'
localedir='${datarootdir}/locale'
localstatedir='${prefix}/var'
mandir='${datarootdir}/man'
oldincludedir='/usr/include'
pdfdir='${docdir}'
prefix='NONE'
program_transform_name='s,x,x,'
psdir='${docdir}'
sbindir='${exec_prefix}/sbin'
sharedstatedir='${prefix}/com'
sysconfdir='${prefix}/etc'
target_alias=''

## ----------- ##
## confdefs.h. ##
## ----------- ##

/* confdefs.h */
#define PACKAGE_NAME "qDecoder"
#define PACKAGE_TARNAME "qdecoder"
#define PACKAGE_VERSION "12 RELEASE"
#define PACKAGE_STRING "qDecoder 12 RELEASE"
#define PACKAGE_BUGREPORT "http://www.qdecoder.org/"
#define PACKAGE_URL ""

configure: exit 1
